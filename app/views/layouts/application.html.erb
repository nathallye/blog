<!DOCTYPE html>
<html>
  <head>
    <title>Blog da Tabaresu</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_pack_tag 'application', media: 'all' %> 
    <%= javascript_pack_tag 'application' %>
  </head>

  <body>
   
    <div class="p-4 mb-4 bg-dark text-center text-white"> <!-- 
    mb-4 p-4 : Definição de margem, borda e preenchimento (margin, border e padding) com CSS simplificado;
    bg-dark: Definição de cor do fundo do blog;
    text-center: Centralizar conteúdo;
    text-white: Definição da cor do texto, nesse caso é branco.
    Disponivel em: https://getbootstrap.com/docs/4.0/utilities/colors/
    -->
      <%= link_to root_path, class: 'text-white' do %> <!-- 
      link_to: Tag do Rails que cria um link para a rota inicial, quando clicar no titulo do blog. Boa prática de usabilidade;
      text-white: precisa adicionar novamente, pois a cor de texto definida anteriormente não se aplica aos links (encontramos essa exlicação na documentação do Bootstrap)
      -->
        <h1 class="display-4">Blog da Tabaresu</h1> <!-- Disponivel em: https://getbootstrap.com/docs/5.1/content/typography/#headings -->
      <% end %> <!--Fechamento do link-->
    
      <p class="lead">
        Olá, aqui você encontrará artigos sobre programação, tecnologia e carrreira. <!--Subtitulo-->
      </p>
    </div>

    <div class="container">
      <% flash.each do |type, message| %> <!-- Loop para exibir o array de mensagens(avisos) -->
      <div class="alert alert-<%= type == "alert" ? "danger" : "success" %> alert-dismissible fade show" role="alert"> <!--
      A cor vai ser alterada de acordo com o tipo de mensagem: 
      * darger para o tipo alert 
      * sucess para outros (notice)
      -->
        <%= message %> <!--Mensagem a ser exibida dinâmicamente-->

        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button> <!--Botão de fechar (close)-->
      </div>
      <% end %>

      <div class="row"> <!--Tabela para a busca-->
        <div class="col-4 offset-8"> <!--offset-8 = Ignorar as 8 primeiras colunas e pegar as 4 ultimas-->
          <div class="search">
            <%= form_with url: search_posts_path, method: :get, local: true, class: "form-inline" do |form| %>
              <div class="form-group mx-3 mb-3">
                <%= form.search_field :q, class: "form-control", required: true, placeholder: "Busca", value: params[:q] %> <!-- *required: true = Não permite buscar com o campo vazio
                * value: params[:q] = para salvar essa busca-->    
              </div>

              <%= form.submit "Buscar", class: "btn btn-dark mb-3",  
                data: { disable_with: "Buscando..." } %> <!--
                Flager(marcador) data { disable_with: "Buscando..."} = toda vez que submeter a atualização ou o novo post, vai desabilitar o botão e vai aparecer "buscando" -->
            <% end %>
          </div>
        </div>
      </div>

      <%= yield %> <!--Conteúdo da aplicação-->
    </div>

    <footer class="mt-5 p-4 bg-dark text-center text-white"> <!--Rodapé-->
    <!--
    mt-5 p-4 : Definição de margem de topo (aplica somente para cima), borda e preenchimento(quando não especificamos nem "b" nem "t" aplica para os dois) 
    (margin, border e padding) com CSS simplificado;
    bg-dark: Definição de cor do fundo do blog;
    text-center: Centralizar conteúdo;
    text-white: Definição da cor do texto, nesse caso é branco.
    Disponivel em: https://getbootstrap.com/docs/4.0/utilities/colors/
    -->
      Copyright © Nathallye Tabaresu <%= Date.current.year%>. <!--
      Date.current.year - 
      Utilizar a classe Date
      .current que pega a data atual
      .year para pegar o ano 
      Assim não teremos que digitar o ano, e mudar o código todos os anos, podemos usar o Rails para gerar o ano dinâmicamente
      -->
    </footer>

  </body>
</html>
